package com.ecommerce.backend.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


import com.ecommerce.backend.entity.WishList;

import com.ecommerce.backend.services.WishListService;

@RestController
public class WishListController {

	
	
	@Autowired
	private WishListService wishListService;
	
	
	
	 @PostMapping("/addwishlist")
	    public ResponseEntity<WishList> crateWishList(@RequestBody WishList wishList) {
		 WishList savedWishList = wishListService.createWishList(wishList);
	        return ResponseEntity.status(HttpStatus.CREATED).body(savedWishList);
	    }

	  @GetMapping("/getallwishlist")
	    public ResponseEntity<List<WishList>> getAllWIshList() {
	        List<WishList> wishList = wishListService.getAllWishList();
	        return ResponseEntity.ok(wishList);
	    }

	    @GetMapping("/getwishlistbyid/{id}")
	    public ResponseEntity<WishList> getWishListById(@PathVariable Long id) {
	        WishList wishList = wishListService.getWishListById(id);
	        if (wishList != null) {
	            return ResponseEntity.ok(wishList);
	        } else {
	            return ResponseEntity.notFound().build();
	        }
	    }


//	    @PutMapping("/updatecart/{id}")
//	    public ResponseEntity<CartItem> updateCartItem(@PathVariable Long id, @RequestBody CartItem cartItem) {
//	        CartItem updatedCartItem = cartItemService.updateCartItem(id, cartItem);
//	        if (updatedCartItem != null) {
//	            return ResponseEntity.ok(updatedCartItem);
//	        } else {
//	            return ResponseEntity.notFound().build();
//	        }
//	    }

	    @DeleteMapping("/deletewishlist/{id}")
	    public ResponseEntity<Void> deleteWishList(@PathVariable Long id) {
	        boolean deleted = wishListService.deleteWishList(id);
	        if (deleted) {
	            return ResponseEntity.noContent().build();
	        } else {
	            return ResponseEntity.notFound().build();
	        }
	    } 	
	    
	    @GetMapping("/user/{user_Id}/productIds")
	    public ResponseEntity<List<Long>> getProductIdsByUserr_id(@PathVariable Long user_Id) {
	        List<Long> productIds = wishListService.getProductIdsByUserr_id(user_Id);
	        return ResponseEntity.ok(productIds);
	    }

	
}
